{# Chart variables format:

    "options":
        "name": "chart_name",
        "data_schema" => array(
            "label" => array("fieldName" => "name", "label" => "oro.xxx.firstName"),
            "value" => array("fieldName" => "salary", "label" => "oro.xxx.salary"),
        ),
        "settings" => array(
            "foo" => "bar"
        ),
    "config": { /** Chart config from in format of oro/chart.yml */ }
    "data": [
        {"label": "In progress", "value": 1000},
        {"label": "Lost", "value": 500},
        {"label": "Won", "value": 10000},
    ]

#}
{% if data|length>0  %}
{% set widgetId = random() %}
<div class="chart-container">
    <div class="clearfix">
        <div id="{{ widgetId }}-chart" class="bar-chart chart pull-left"></div>
    </div>
</div>
<script type="text/javascript">
    require(['jquery', 'oroui/js/layout', 'flotr2', 'orolocale/js/formatter/number'],
            function($, layout, Flotr, numberFormatter){
                $(function () {
                    var $chart = $('#{{ widgetId }}-chart');
                    var $widgetContent = $chart.parents('.chart-container').parent();
                    var setChartSize = function () {
                        var chartWidth = Math.round($widgetContent.width() * 0.9);
                        if (chartWidth != $chart.width()) {
                            $chart.width(chartWidth);
                            $chart.height(Math.min(Math.round(chartWidth * 0.4), 350));
                            return true;
                        }
                        return false;
                    };
                    var setChartContainerSize = function () {
                        $chart.closest('.clearfix').width($chart.width());
                    };
                    var drawChart = function () {

                        if (!$chart.get(0).clientWidth) {
                            return;
                        }
                        var data = {{ data|json_encode|raw }};
                        var colors = {{ config.default_settings.chartColors|json_encode|raw }};
                        var chartData = [];
                        var xLabels = [];
                        var xNumber = 0;
                        for(var i in data){
                            chartData.push([xNumber++, parseInt(data[i]['value'])]);
                            xLabels.push(data[i]['label']);
                        }
                        var chart = {
                            data: chartData,
                            color: colors[0],
                            markers: {
                                show: true,
                                position: 'ct',
                                labelFormatter: function (data) {
                                    return numberFormatter.formatCurrency(data.y);
                                }
                            }
                        };
                        Flotr.draw(
                                $chart.get(0),
                                [chart],
                                {
                                    colors: {{ options.settings.chartColors|json_encode|raw }},
                                    fontColor: {{ options.settings.chartFontColor|json_encode|raw }},
                                    fontSize: {{ options.settings.chartFontSize|json_encode|raw }},
                                    bars : {
                                        show : true,
                                        horizontal : false,
                                        shadowSize : 0,
                                        barWidth : 0.5
                                    },
                                    mouse : {
                                        track : true,
                                        relative : true,
                                        trackFormatter: function (data) {
                                            return xLabels[parseInt(data.x)] + ': ' + numberFormatter.formatCurrency(data.y);
                                        }
                                    },
                                    yaxis: {
                                        min: 0,
                                        tickFormatter: function (y) {
                                            return numberFormatter.formatCurrency(y);
                                        }
                                    },
                                    xaxis: {
                                        noTicks: 2,
                                        tickFormatter: function (x) {
                                            return xLabels[parseInt(x)];
                                        }
                                    },
                                    grid: {
                                        verticalLines : false
                                    }
                                }
                        );
                    };

                    layout.onPageRendered(function () {
                        setChartSize();
                        drawChart();
                        setChartContainerSize();
                    });

                    $(window).resize(function () {
                        if (setChartSize()) {
                            drawChart();
                            setChartContainerSize();
                        }
                    });
                });
            });
</script>
{% else %}
    <div class="clearfix no-data">
        <span>{{ 'oro.dashboard.no_data_found'|trans }}</span>
    </div>
{% endif %}
